        var percentColors = [
        { pct: 0.0, color: { r: 0xff, g: 0x00, b: 0 } },
        { pct: 0.5, color: { r: 0xcc, g: 0xcc, b: 0xcc } },
        { pct: 1.0, color: { r: 0x00, g: 0, b: 0xff } } ];

        var getColorForPercentage = function(pct) {
            for (var i = 1; i < percentColors.length - 1; i++) {
                if (pct < percentColors[i].pct) {
                    break;
                }
            }
            var lower = percentColors[i - 1];
            var upper = percentColors[i];
            var range = upper.pct - lower.pct;
            var rangePct = (pct - lower.pct) / range;
            var pctLower = 1 - rangePct;
            var pctUpper = rangePct;
            var color = {
                r: Math.floor(lower.color.r * pctLower + upper.color.r * pctUpper),
                g: Math.floor(lower.color.g * pctLower + upper.color.g * pctUpper),
                b: Math.floor(lower.color.b * pctLower + upper.color.b * pctUpper)
            };
            return 'rgb(' + [color.r, color.g, color.b].join(',') + ')';
    // or output as hex if preferred
}  


var colordict = {'0': 'rgba(31,119,180,1.0)',
'1': 'rgba(174,199,232,1.0)',
'2': 'rgba(255,127,14,1.0)',
'3': 'rgba(255,187,120,1.0)',
'4': 'rgba(44,160,44,1.0)',
'5': 'rgba(152,223,138,1.0)',
'6': 'rgba(214,39,40,1.0)',
'7': 'rgba(255,152,150,1.0)',
'8': 'rgba(148,103,189,1.0)',
'9': 'rgba(197,176,213,1.0)',
'10': 'rgba(140,86,75,1.0)',
'11': 'rgba(196,156,148,1.0)',
'12': 'rgba(227,119,194,1.0)',
'13': 'rgba(247,182,210,1.0)',
'14': 'rgba(127,127,127,1.0)',
'15': 'rgba(199,199,199,1.0)',
'16': 'rgba(188,189,34,1.0)',
'17': 'rgba(219,219,141,1.0)'}



var paplancolors = [];
var plancolor = []
function colorplan(feature) {

            plancolor.push(parseInt(feature.properties["T16SEND"])/(parseInt(feature.properties["T16SEND"]) + parseInt(feature.properties["T16SENR"])));
            //feature.properties["color"] = 0    
            return {
                //pane: 'pane_PA_VTD_PLANS_0',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.75, 
                fill: true,
                fillOpacity: 1,
                fillColor: getColorForPercentage(parseInt(feature.properties["T16SEND"])/(parseInt(feature.properties["T16SEND"]) + parseInt(feature.properties["T16SENR"]))),
                //colordict[String(feature.properties["assn"])],
            };
        }



        const pamakemap = (bindto,varname) =>  {
            plancolor = [];
            var map = new L.map(bindto, {
                maxZoom:12, minZoom:6, attributionControl: false,
            }).fitBounds([[41.5,-81],[39.5,-74]]);

            var layer =  L.geoJson(varname, {
                style: colorplan,
            }).addTo(map);

            
            
            paplancolors.push(plancolor.slice(0).sort())
            return layer;
        }



        [['pamap0', vtds_0], 
['pamap1', vtds_1], 
['pamap2', vtds_2], 
['pamap3', vtds_3], 
['pamap4', vtds_4], 
['pamap5', vtds_5], 
['pamap6', vtds_6], 
['pamap7', vtds_7], 
['pamap8', vtds_8], 
['pamap9', vtds_9], 
['pamap10', vtds_10], 
['pamap11', vtds_11], 
['pamap12', vtds_12], 
['pamap13', vtds_13], 
['pamap14', vtds_14], 
['pamap15', vtds_15], 
['pamap16', vtds_16], 
['pamap17', vtds_17], 
['pamap18', vtds_18], 
['pamap19', vtds_19], 
['pamap20', vtds_20], 
['pamap21', vtds_21], 
['pamap22', vtds_22], 
['pamap23', vtds_23], 
['pamap24', vtds_24]].forEach(x => pamakemap(x[0],x[1]))


const sv_0 =  [[1, 0.30156962559789213], [2, 0.3306459148579707], [3, 0.3415215689182314], [4, 0.3782839211348953], [5, 0.41325123953410414], [6, 0.44211136656106964], [7, 0.45623581890797105], [8, 0.4633778200190819], [9, 0.4902504456421417], [10, 0.5057804367369887], [11, 0.5233359758494256], [12, 0.5321782401669304], [13, 0.5558241507889112], [14, 0.5865345159161839], [15, 0.6201287026990563], [16, 0.6585026603076788], [17, 0.6693158075203034], [18, 0.6984087165725117]]
const scores_0 = [0.14, 0.996];


const sv_1 =  [[1, 0.2866073903798405], [2, 0.32344988212360604], [3, 0.3529456568786312], [4, 0.3569219936038487], [5, 0.41476681341584043], [6, 0.43143080570042436], [7, 0.4802373898567116], [8, 0.4816962481602225], [9, 0.49206090167927685], [10, 0.502209967458488], [11, 0.5031669069051529], [12, 0.518344963231832], [13, 0.5519367172791625], [14, 0.5850332194667702], [15, 0.6431998932177392], [16, 0.6470770045818639], [17, 0.6765793598942338], [18, 0.7138747434988594]]
const scores_1 = [0.168, 0.996];


const sv_2 =  [[1, 0.3027965279981425], [2, 0.32234092099087774], [3, 0.34744278737259304], [4, 0.36464912617600853], [5, 0.42055151164367877], [6, 0.44217570404113393], [7, 0.46031877078221883], [8, 0.4729390570547244], [9, 0.49061724791585193], [10, 0.5080649372522561], [11, 0.5108546829751873], [12, 0.5287565218112458], [13, 0.5467026507615459], [14, 0.5794589384498976], [15, 0.6318959457368347], [16, 0.6526669575681574], [17, 0.6775941594419478], [18, 0.6988271253797796]]
const scores_2 = [0.216, 0.995];


const sv_3 =  [[1, 0.32861135915237516], [2, 0.3317145795068426], [3, 0.3619206797928145], [4, 0.3813847889240608], [5, 0.3937360802260409], [6, 0.4080945727825218], [7, 0.4309176390479593], [8, 0.47359569950713387], [9, 0.4818904108409592], [10, 0.4846383960195757], [11, 0.5059761029612383], [12, 0.5690274923892917], [13, 0.5918543237433254], [14, 0.6046967836429014], [15, 0.6184531532342574], [16, 0.6380919369941098], [17, 0.6681801285310434], [18, 0.6713347559863919]]
const scores_3 = [0.221, 0.994];


const sv_4 =  [[1, 0.3050795089309388], [2, 0.33565076098866853], [3, 0.3545783509492767], [4, 0.36260464531521264], [5, 0.4034584365966031], [6, 0.4191727270306913], [7, 0.42072275735332787], [8, 0.4607480473374518], [9, 0.4921995159694097], [10, 0.49877354535040874], [11, 0.5278957433540605], [12, 0.5549058838009142], [13, 0.5661641565487141], [14, 0.5924502633439315], [15, 0.6373975509245494], [16, 0.6455669357447005], [17, 0.6643796320124205], [18, 0.7063454059330924]]
const scores_4 = [0.225, 0.992];


const sv_5 =  [[1, 0.29878961884098665], [2, 0.3321426892798398], [3, 0.3337127157944051], [4, 0.3871017783893631], [5, 0.3975678886984587], [6, 0.4320505523614995], [7, 0.4369319488919631], [8, 0.4623165360558448], [9, 0.49540536411389324], [10, 0.5046438817112888], [11, 0.5112270261329506], [12, 0.5116777739306722], [13, 0.5559294013266598], [14, 0.6024238111846534], [15, 0.6128970356527816], [16, 0.6662905102283454], [17, 0.6680233040323137], [18, 0.7033284748049228]]
const scores_5 = [0.227, 0.99];


const sv_6 =  [[1, 0.29838335467118227], [2, 0.33025458879864966], [3, 0.3338078881794012], [4, 0.3915233830884216], [5, 0.3966419228981193], [6, 0.4305523001131345], [7, 0.436748446399034], [8, 0.4624553311982129], [9, 0.49478199468443496], [10, 0.5050255055458747], [11, 0.507682392865918], [12, 0.5113138131968984], [13, 0.5557467396927944], [14, 0.6031855651431184], [15, 0.6086339175319884], [16, 0.6659796251251928], [17, 0.6699206472063349], [18, 0.7076218525404299]]
const scores_6 = [0.23, 0.989];


const sv_7 =  [[1, 0.28491180983669984], [2, 0.3323039143150829], [3, 0.33602120072101294], [4, 0.37124043267236695], [5, 0.414418513416015], [6, 0.4428063513112216], [7, 0.4467387766858246], [8, 0.47303652378778027], [9, 0.477341928328614], [10, 0.5035688290673894], [11, 0.5144936194594585], [12, 0.5242591161985604], [13, 0.5393446109529444], [14, 0.585589738033708], [15, 0.6286854267038582], [16, 0.6641545967875657], [17, 0.6677790097205578], [18, 0.7398640051610837]]
const scores_7 = [0.232, 0.988];


const sv_8 =  [[1, 0.3073400620068888], [2, 0.3358937440517854], [3, 0.3683574694501217], [4, 0.38239955894332645], [5, 0.4016022142797664], [6, 0.40452262484518], [7, 0.41041862093543613], [8, 0.4303761673908718], [9, 0.488022267428983], [10, 0.4996572862610682], [11, 0.5607425207854435], [12, 0.5643912809739088], [13, 0.5821835960149944], [14, 0.584078920156023], [15, 0.6173233365145472], [16, 0.6308686714809415], [17, 0.6624423415912809], [18, 0.730252748580767]]
const scores_8 = [0.238, 0.987];


const sv_9 =  [[1, 0.2898582021951871], [2, 0.3369075712649773], [3, 0.36055730392166885], [4, 0.40417313629884166], [5, 0.40474838273194], [6, 0.4091968931450193], [7, 0.4444742294532562], [8, 0.44780164416821155], [9, 0.4822832750715995], [10, 0.5071665232830115], [11, 0.5094749724639592], [12, 0.5190677028361674], [13, 0.5727518066006181], [14, 0.5952229908757292], [15, 0.5953433306432165], [16, 0.6394244212504439], [17, 0.6632607401573118], [18, 0.7677678144528955]]
const scores_9 = [0.262, 0.982];


const sv_10 =  [[1, 0.3078546989022225], [2, 0.330409460613471], [3, 0.3527711635755951], [4, 0.36832588077927786], [5, 0.4091048483945453], [6, 0.42700901100377686], [7, 0.4349534168109074], [8, 0.46325024552826133], [9, 0.4982617951602998], [10, 0.49828614194099785], [11, 0.5025762769869013], [12, 0.5236670909167566], [13, 0.5331865597311066], [14, 0.5915201380192434], [15, 0.6316087362084541], [16, 0.647298726247791], [17, 0.6695285767480184], [18, 0.7584097657875134]]
const scores_10 = [0.271, 0.979];


const sv_11 =  [[1, 0.29642083446400036], [2, 0.3365688435718255], [3, 0.34848138509789495], [4, 0.3750148182358759], [5, 0.40335479278715136], [6, 0.41390136253721765], [7, 0.43818007900846434], [8, 0.4464977418844466], [9, 0.4652425643013435], [10, 0.4837918817724154], [11, 0.5050787720467346], [12, 0.5104856453476301], [13, 0.5860550416666079], [14, 0.5967904827714334], [15, 0.6250293169851481], [16, 0.651511019696734], [17, 0.6634338671631712], [18, 0.7429968211044087]]
const scores_11 = [0.276, 0.979];


const sv_12 =  [[1, 0.2987954971097303], [2, 0.3366623717820971], [3, 0.34271295801641477], [4, 0.37911800024668196], [5, 0.4075504247652947], [6, 0.4110222769581754], [7, 0.4312476188959048], [8, 0.4508118037175407], [9, 0.4704875472598533], [10, 0.484851360135246], [11, 0.5055192073652648], [12, 0.5055831230819468], [13, 0.5801397121756333], [14, 0.5913413874083524], [15, 0.6210846567199775], [16, 0.6566979876080834], [17, 0.6631198512915257], [18, 0.7464652442129074]]
const scores_12 = [0.282, 0.977];


const sv_13 =  [[1, 0.3056646810699719], [2, 0.33152915461641863], [3, 0.35786042757251324], [4, 0.3782973099669591], [5, 0.41491325537499024], [6, 0.42854780405526427], [7, 0.4294744445611983], [8, 0.4586538564064697], [9, 0.494351059587816], [10, 0.5034414705247596], [11, 0.5054821888089627], [12, 0.5100694901462097], [13, 0.5340547797098383], [14, 0.5851518357302253], [15, 0.619092240765505], [16, 0.6419589828608555], [17, 0.6689020350831216], [18, 0.7892969508716627]]
const scores_13 = [0.285, 0.974];


const sv_14 =  [[1, 0.3279291561837018], [2, 0.3339739372137718], [3, 0.33715275665931177], [4, 0.3872990863751593], [5, 0.4066364749103155], [6, 0.42608157200523045], [7, 0.43666772954495636], [8, 0.4529965168020146], [9, 0.4571976053421677], [10, 0.4693977019570992], [11, 0.4914767930590549], [12, 0.5498886631240703], [13, 0.5629072573934669], [14, 0.5939280924339432], [15, 0.6126843839754555], [16, 0.6628886831051792], [17, 0.6688167484241917], [18, 0.7680033164356146]]
const scores_14 = [0.292, 0.972];


const sv_15 =  [[1, 0.2952209479285095], [2, 0.32867515411948944], [3, 0.358206249041656], [4, 0.4053810450415888], [5, 0.4108976352174031], [6, 0.4137011048901261], [7, 0.4383613694336229], [8, 0.4559296075567303], [9, 0.4615862936629843], [10, 0.48820225655241634], [11, 0.49866066240641715], [12, 0.514672861355798], [13, 0.5389467196708626], [14, 0.589076701397437], [15, 0.5945735329517289], [16, 0.6417908918658762], [17, 0.6787511963963216], [18, 0.7855842661487171]]
const scores_15 = [0.295, 0.969];


const sv_16 =  [[1, 0.29402849808465537], [2, 0.32922433067411483], [3, 0.35809288937707096], [4, 0.4039568764565393], [5, 0.40902148732296595], [6, 0.41584096981053775], [7, 0.4375026066744441], [8, 0.4415598414636348], [9, 0.455605706297704], [10, 0.4835395489485833], [11, 0.5005337207314291], [12, 0.5298486748415503], [13, 0.5401829082729945], [14, 0.5910242087218271], [15, 0.5962816083309023], [16, 0.6402491984886705], [17, 0.6824685486440683], [18, 0.7792278446877038]]
const scores_16 = [0.297, 0.969];


const sv_17 =  [[1, 0.2954929531766375], [2, 0.33000555965066214], [3, 0.3565062471809757], [4, 0.40409573716336056], [5, 0.4091438960855752], [6, 0.4151048713033344], [7, 0.43680468471423317], [8, 0.44471859382281553], [9, 0.4567932369692993], [10, 0.4832687632478829], [11, 0.4997302015074908], [12, 0.5290616963969147], [13, 0.5374427205180683], [14, 0.5908456550787593], [15, 0.5969894275195156], [16, 0.6436116511277277], [17, 0.679727937942421], [18, 0.7788451972774325]]
const scores_17 = [0.3, 0.969];


const sv_18 =  [[1, 0.2938279139542317], [2, 0.33024555064221695], [3, 0.3580888206874173], [4, 0.40382061557314997], [5, 0.40931705671089635], [6, 0.4158004982376746], [7, 0.4372737538913023], [8, 0.446110635061274], [9, 0.4546209968573025], [10, 0.4847535129676116], [11, 0.49857294403916586], [12, 0.5273332771102592], [13, 0.5383676131168933], [14, 0.5907301081934484], [15, 0.6001100814875571], [16, 0.6426426117801014], [17, 0.6780105284069616], [18, 0.7803935562023261]]
const scores_18 = [0.309, 0.968];


const sv_19 =  [[1, 0.300148318495046], [2, 0.3471474041831094], [3, 0.37157193476201034], [4, 0.38955922923705055], [5, 0.40081545303846444], [6, 0.4073060315146757], [7, 0.4289372714532854], [8, 0.4318467201526317], [9, 0.4500131601514541], [10, 0.47381751591653964], [11, 0.49541114440726686], [12, 0.5024685130899598], [13, 0.5892896141130977], [14, 0.5982757477001124], [15, 0.6092092184340844], [16, 0.6282793835209416], [17, 0.652554558631895], [18, 0.8700652633907535]]
const scores_19 = [0.338, 0.956];


const sv_20 =  [[1, 0.302005356120016], [2, 0.34510381550256575], [3, 0.36730168383361006], [4, 0.38902996739364404], [5, 0.40111807799347854], [6, 0.4141433185343356], [7, 0.4188750772804536], [8, 0.4307499948035648], [9, 0.448053775749228], [10, 0.45948925160838716], [11, 0.49650673221800845], [12, 0.49967775575334605], [13, 0.5269209779911894], [14, 0.5808939883271773], [15, 0.610511367244482], [16, 0.6422843694636454], [17, 0.7149106664186127], [18, 0.8720758682440148]]
const scores_20 = [0.34, 0.937];


const sv_21 =  [[1, 0.3290122757523488], [2, 0.33360613032292963], [3, 0.33884557133014936], [4, 0.3675919840979105], [5, 0.3943639526819903], [6, 0.4190782119470575], [7, 0.4399954975248995], [8, 0.45481393623352373], [9, 0.4791800160690246], [10, 0.4842670312177897], [11, 0.4950255938447343], [12, 0.4961252996028358], [13, 0.5032000867031864], [14, 0.571220410035673], [15, 0.5750564131518884], [16, 0.6604384818609428], [17, 0.7585706131927444], [18, 0.8412982630193078]]
const scores_21 = [0.353, 0.935];


const sv_22 =  [[1, 0.33716111095401424], [2, 0.348243475646698], [3, 0.3662591648244191], [4, 0.3776673491416277], [5, 0.37990428525074016], [6, 0.38530746592402554], [7, 0.4139858064147395], [8, 0.4387973799029127], [9, 0.4580127286706229], [10, 0.46560500750475287], [11, 0.487989501880039], [12, 0.4941380441329586], [13, 0.5173795046539991], [14, 0.6118527054027658], [15, 0.6174435659393489], [16, 0.6321822118235395], [17, 0.7358594959404609], [18, 0.8793830700894978]]
const scores_22 = [0.36, 0.927];


const sv_23 =  [[1, 0.337958742336685], [2, 0.3479330395299093], [3, 0.3655873479110924], [4, 0.37257068268558513], [5, 0.3798675765648486], [6, 0.3889980603204015], [7, 0.41346735657222755], [8, 0.4382352947135755], [9, 0.45860857096773067], [10, 0.4632540673958455], [11, 0.48818488184367637], [12, 0.4914969978090209], [13, 0.5212271475687483], [14, 0.609139974558168], [15, 0.615345360475252], [16, 0.6342075110855954], [17, 0.7369923380659763], [18, 0.8763079392909505]]
const scores_23 = [0.36, 0.927];


const sv_24 =  [[1, 0.3379142558674335], [2, 0.34613794189157376], [3, 0.36902395890075046], [4, 0.37632757882342116], [5, 0.38039008081848924], [6, 0.38487534748629104], [7, 0.4125041084091883], [8, 0.4370058180569286], [9, 0.4566981265216864], [10, 0.46495439298578156], [11, 0.489426077418179], [12, 0.4915729819755278], [13, 0.5148493431259117], [14, 0.6107798601669765], [15, 0.6170072577185399], [16, 0.6285069394805005], [17, 0.7427300479447073], [18, 0.8773226801922045]]
const scores_24 = [0.36, 0.926];







        const w = 300;


        const h = 300;

        const makeplot = (name, ds, scores) => {
            var svg = d3.select("#pamap_"+String(name)+"_plot")
            .append("svg")
            .attr("width", w)
            .attr("height", h);

            svg.append("text")
            .attr("x",20)
            .attr("y",25)
            .text("Polsby-Popper: " + String(scores[0]))

            svg.append("text")
            .attr("x",20)
            .attr("y",50)
            .text("Partisan Symmetry: " + String(scores[1]))
            


            svg.append("line")
            .attr("x1",0)
            .attr("y1",0)
            .attr("x2",0)
            .attr("y2",h)
            .style("stroke-width",3)
            .style("stroke","#999999");
            svg.append("line")
            .attr("x1",0)
            .attr("y1",h)
            .attr("x2",w)
            .attr("y2",h)
            .style("stroke-width",3)
            .style("stroke","#999999");




            var circs = svg.selectAll("circle")
            .data(ds)
            .enter();

            circs.append("circle")

            .attr("cx", function(d) {
                return d[0]*w/20;
            })
            .attr("cy", function(d) {
                return h-(d[1]*h);
            })
            .attr("r", 6)
            .style("fill",function(d) {  return getColorForPercentage( paplancolors[parseInt(name)][d[0]-1] )})
            

            circs.append("circle")
            .attr("cx" ,function(d) {return w - ((d[0]+1)*w/20) }  )
            .attr("cy", function(d) { return d[1]*h })
            .attr("r",2)
            .style("fill", "#323232");


        }


        [['0', sv_0, scores_0], 
['1', sv_1, scores_1], 
['2', sv_2, scores_2], 
['3', sv_3, scores_3], 
['4', sv_4, scores_4], 
['5', sv_5, scores_5], 
['6', sv_6, scores_6], 
['7', sv_7, scores_7], 
['8', sv_8, scores_8], 
['9', sv_9, scores_9], 
['10', sv_10, scores_10], 
['11', sv_11, scores_11], 
['12', sv_12, scores_12], 
['13', sv_13, scores_13], 
['14', sv_14, scores_14], 
['15', sv_15, scores_15], 
['16', sv_16, scores_16], 
['17', sv_17, scores_17], 
['18', sv_18, scores_18], 
['19', sv_19, scores_19], 
['20', sv_20, scores_20], 
['21', sv_21, scores_21], 
['22', sv_22, scores_22], 
['23', sv_23, scores_23], 
['24', sv_24, scores_24]].forEach(x => makeplot(x[0],x[1],x[2])) 
